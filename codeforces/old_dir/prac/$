#include <bits/stdc++.h>
#include <unordered_map>
using namespace std;
typedef vector<int> vi;
typedef vector<string> vs;
typedef long long ll;
#define F first
#define S second
#define PB push_back
#define MP make_pair
#define coutvi(v) {for(int i : v) cout << i << " ";}
#define coutvs(v) {for(string s : v) cout << i << " ";}
#define REP(i,a,b) for(int i = a ; i <= b ; i++)
#define si(x) int(x.size())

vector<vector<int>> threeSum(vector<int>& nums){
		vector<vector<int>> res;
		sort(nums.begin() , nums.end());
		for(int i = 0 ; i < nums.size() ; i++){
				if(nums[i] > 0) break;
				if(i > 0 && nums[i] == nums[i-1]) continue;
				int l = i + 1, r = nums.size() - 1;
				while(l < r){
						int sum = nums[l] + nums[r] + nums[i];
						if(sum > 0){
								r--;
						}
						else if(sum < 0){
								l++;
						} else {
								res.push_back({nums[i] , nums[l] , nums[r]});
								l++;
								r--;
								while (l < r && nums[l]==nums[l-1]) {
									l++;
								}
						}
				}
		}
		return res;
}
int main (int argc, char *argv[]) {
		// If it was two sum
		// we would sort the array and then iterate using two pointers
		vector<int> nums = {-1,0,1,2,-1,-4};
		vector<vector<int>> res = threeSum(nums);
		for(int i = 0 ; i < res.size() ; i++){
				for(int j = 0 ; j < res[i].size() ; j++){
						cout << res[i][j] << '|';
				}
				cout << endl;
		}
		return 0;
}
